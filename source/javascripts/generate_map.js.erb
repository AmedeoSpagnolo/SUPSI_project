
$( document ).ready(function() {

$('#currentsign').html(app.sign)

  //
  // fake dataset
  //

  var dataset = createdataset()
  console.log(dataset)
  // 
  // render map
  //
  var datamap = new Datamap({
    element: document.getElementById('map_container'),
    projection: 'mercator', // big world map
    data: dataset,
    responsive: true,
    fills: { 
      defaultFill: 'lightgrey',
      'bubbles': 'red' 
    },
    geographyConfig: {
      borderWidth: 1,
      borderColor: 'white',
      highlightOnHover: false
      // popupTemplate: function(geo, datamap) {
      //     if (!datamap) { return ; }
      //     return ['<div class="hoverinfo">',
      //         '<strong>', geo.properties.name, '</strong>',
      //         '<br>Count: <strong>', datamap.numberOfThings, '</strong>',
      //         '</div>'].join('');
      // }
    }


  })

  $(window).on('resize', function(){
    datamap.resize()
  })

  datamap.bubbles(create_bubbles(dataset))

  // d3.select('svg').append("line")          // attach a line
  //   .style("stroke", "black")  // colour the line
  //   .attr("x1", 584.2897777777778)     // x position of the first end of the line
  //   .attr("y1", 533.7501334293254)      // y position of the first end of the line
  //   .attr("x2", 300)     // x position of the second end of the line
  //   .attr("y2", 150);    // y position of the second end of the line   
})

var centrObj = {}
  centroids.forEach(function(c){
    centrObj[c.country] = c
})
function create_bubbles(dataset){
  var bubbleArray = [];
  for (var d in dataset) {
    bubbleArray.push({
      'latitude': centrObj[dataset[d].country].lat,
      'longitude': centrObj[dataset[d].country].lng,
      'radius' : 4,
      'fillKey': 'bubbles'
    })
  }

  return bubbleArray;
}


function createdataset(){
    
    var series = []

    <% data.countryscope.countries.each do |iter| %>
      <% data.countryscope.countries[iter[0]].each do |country| %>
        series.push([
          '<%= data.country_codes["#{country[:place]}"] %>', 
          app.affinity['<%= iter[0] %>'][app.sign],
          "<%= country[:place]%>"
        ])
      <% end %>
    <% end %>


    var dataset = {};

    var onlyValues = series.map(function(obj){ return obj[1]; });
    var minValue = Math.min.apply(null, onlyValues),
        maxValue = Math.max.apply(null, onlyValues);
    // create color palette function
    // color can be whatever you wish
    var paletteScale = d3.scale.linear()
            .domain([minValue,maxValue])
            .range(["#d3d3d3","#02386F"]); // blue color

    var radiusScale = d3.scale.linear()
            .domain([minValue,maxValue])
            .range([2, 20]);
    // fill dataset in appropriate format
    series.forEach(function(item){ //
        // item example value ["USA", 70]
        var iso = item[0],
            value = item[1],
            country = item[2];
        dataset[iso] = { numberOfThings: value, fillColor: paletteScale(value), country: country};

    });
    return dataset
}
